##############################################################################
# Mustafa Zahid, May 27th, 2022
# This script has been and will be updated throughout the project.  This code
# will be up in github and any changes to the code will be committed to the
# repo in github. This is the master script and it sources the functions from
# other scripts in the same directory. the initial part of the script contains
# a fair amount of processing. As such I will save the processed data from this
# script and just read it whenever I need to run the code. The processing code
# will be commented out
# Input(s): Libraries, created functions, raw CGM model rasters, world bank
# data, Penn world table data, processed temperature response data (FaIR),
# world population raster, world country-borders shapefile
# output(s): country-year panel with total damages from different emissions
# perturbations (past and future), emitter-harmed-year panel for bilateral
# damages,
# Last edited: June 2023
##############################################################################
################################################################################
################# PRE: Clear env., read libs, source functions #################
################################################################################
remove(list=ls())
gc()
sf::sf_use_s2(FALSE)
# read in the needed libraries
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/0_read_libs.R")
# function for calculating warming ratio CGMs
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/1_r_cgm.R")
# functions for computing deltaT form fair
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2a_FaIR_deltaT_hist.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2c_FaIR_deltaT_hist_fut_disagg.R")
# functions for prepping gdp-temp panel and for computing damages
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a0_run_gdptemp_panel.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a1_run_gdptemp_panel_bhmbs.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a2_run_gdptemp_panel.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a2_run_gdptemp_panel_5lags.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3b0_run_bhm_model.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c0_calc_total_damages_bilateral.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c1_calc_total_damages.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c2_calc_total_damages_5lags.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c2_calc_total_damages_5lags.R")
################################################################################
################# PRE0: Clear env., read libs, source functions ################
################################################################################
remove(list=ls())
gc()
sf::sf_use_s2(FALSE)
# read in the needed libraries
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/0_read_libs.R")
# function for calculating warming ratio CGMs
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/1_r_cgm.R")
# functions for computing deltaT form fair
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2a_FaIR_deltaT_hist.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2c_FaIR_deltaT_hist_fut_disagg.R")
# functions for prepping gdp-temp panel and for computing damages
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a0_run_gdptemp_panel.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a1_run_gdptemp_panel_bhmbs.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3a2_run_gdptemp_panel_5lags.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3b0_run_bhm_model.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c0_calc_total_damages_bilateral.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c1_calc_total_damages.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/3c2_calc_total_damages_5lags.R")
################################################################################
###################### PRE1: Read needed data for analysis #####################
################################################################################
# population country-year dataset
pop_wdi <- readRDS("~/BurkeLab Dropbox/Projects/loss_damage/data/processed/world_gdp_pop/pop_wdi.rds")
#################################################################################
##################### PART I: Calculate CGM Warming Ratio #######################
#################################################################################
# calculate deltaTs. Specify the needed cgm models and read the model names so we
# can use to call models and rename output
#cgm_guide <- read_excel("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/cgm_model_guide.xlsx")
# Now we will create a warming ratio raster per each of the models
#for (i in unique(cgm_guide$cgm_model)){
#  tic()
#  raster_deltaT_calced1 <- calculate_grid_warming_ratio("historical", "ssp370", i)
#  assign(paste0("raster_deltaT_", i), raster_deltaT_calced1)
#  toc()
#}
# now we have a raster for each of the models where we have grid level warming
# ratio relative to global warming
# let us create one raster that is the average of all the rasters
# master_raster <- mean(`raster_deltaT_ACCESS-CM2_r1i1p1f1`,
#                      `raster_deltaT_ACCESS-ESM1-5_r1i1p1f1`,
#                      `raster_deltaT_AWI-CM-1-1-MR_r1i1p1f1`,
#                      `raster_deltaT_BCC-CSM2-MR_r1i1p1f1`,
#                      raster_deltaT_CanESM5_r1i1p1f1,
#                      `raster_deltaT_CAS-ESM2-0_r1i1p1f1`,
#                      raster_deltaT_CESM2_r10i1p1f1,#
#                      `raster_deltaT_CESM2-WACCM_r1i1p1f1`,
#                      `raster_deltaT_CMCC-CM2-SR5_r1i1p1f1`,
#                      `raster_deltaT_CMCC-ESM2_r1i1p1f1`,
#                      `raster_deltaT_CNRM-CM6-1_r1i1p1f2`,
#                      `raster_deltaT_CNRM-CM6-1-HR_r1i1p1f2`,
#                      `raster_deltaT_FGOALS-f3-L_r1i1p1f1`,
#                      `raster_deltaT_FGOALS-g3_r1i1p1f1`,
#                      `raster_deltaT_GFDL-ESM4_r1i1p1f1`,
#                      `raster_deltaT_GISS-E2-1-G_r1i1p1f2`,
#                      `raster_deltaT_IITM-ESM_r1i1p1f1`,
#                      `raster_deltaT_INM-CM4-8_r1i1p1f1`,
#                      `raster_deltaT_IPSL-CM5A2-INCA_r1i1p1f1`,
#                      `raster_deltaT_IPSL-CM6A-LR_r1i1p1f1`,
#                      `raster_deltaT_KACE-1-0-G_r1i1p1f1`,
#                      `raster_deltaT_MIROC-ES2L_r1i1p1f2`,
#                      raster_deltaT_MIROC6_r1i1p1f1,
#                      `raster_deltaT_MPI-ESM1-2-LR_r10i1p1f1`,
#                      `raster_deltaT_MRI-ESM2-0_r1i1p1f1`,
#                      `raster_deltaT_NorESM2-LM_r1i1p1f1`,
#                      `raster_deltaT_NorESM2-MM_r1i1p1f1`,
#                      raster_deltaT_TaiESM1_r1i1p1f1,
#                      `raster_deltaT_UKESM1-0-LL_r1i1p1f2`)#
# let us put the rasters in a list in case we want to loop over them
#list_rasters <- list(`raster_deltaT_ACCESS-CM2_r1i1p1f1`,
#                     `raster_deltaT_ACCESS-ESM1-5_r1i1p1f1`,
#                     `raster_deltaT_AWI-CM-1-1-MR_r1i1p1f1`,
#                     `raster_deltaT_BCC-CSM2-MR_r1i1p1f1`,
#                     raster_deltaT_CanESM5_r1i1p1f1,
#                     `raster_deltaT_CAS-ESM2-0_r1i1p1f1`,
#                     raster_deltaT_CESM2_r10i1p1f1,
#                     `raster_deltaT_CESM2-WACCM_r1i1p1f1`,
#                     `raster_deltaT_CMCC-CM2-SR5_r1i1p1f1`,
#                     `raster_deltaT_CMCC-ESM2_r1i1p1f1`,
#                     `raster_deltaT_CNRM-CM6-1_r1i1p1f2`,
#                     `raster_deltaT_CNRM-CM6-1-HR_r1i1p1f2`,
#                     `raster_deltaT_FGOALS-f3-L_r1i1p1f1`,
#                     `raster_deltaT_FGOALS-g3_r1i1p1f1`,
#                     `raster_deltaT_GFDL-ESM4_r1i1p1f1`,
#                     `raster_deltaT_GISS-E2-1-G_r1i1p1f2`,
#                     `raster_deltaT_IITM-ESM_r1i1p1f1`,
#                     `raster_deltaT_INM-CM4-8_r1i1p1f1`,
#                     `raster_deltaT_IPSL-CM5A2-INCA_r1i1p1f1`,
#                     `raster_deltaT_IPSL-CM6A-LR_r1i1p1f1`,
#                     `raster_deltaT_KACE-1-0-G_r1i1p1f1`,
#                     `raster_deltaT_MIROC-ES2L_r1i1p1f2`,
#                     raster_deltaT_MIROC6_r1i1p1f1,
#                     `raster_deltaT_MPI-ESM1-2-LR_r10i1p1f1`,
#                     `raster_deltaT_MRI-ESM2-0_r1i1p1f1`,
#                     `raster_deltaT_NorESM2-LM_r1i1p1f1`,
#                     `raster_deltaT_NorESM2-MM_r1i1p1f1`,
#                     raster_deltaT_TaiESM1_r1i1p1f1,
#                     `raster_deltaT_UKESM1-0-LL_r1i1p1f2`)
#
# save raster
#writeRaster(master_raster, "~/Burkelab Dropbox/Projects/loss_damage/data/figs/fig1/ratio_raster_avgs.tif")
#writeRaster(master_raster, "~/Burkelab Dropbox/Projects/loss_damage/data/processed/r_cgm/ratio_raster_avgs.tif")
#raster::writeRaster(master_raster, "~/BurkeLab Dropbox/Projects/loss_damage/sherlock_files/data/pre_processed/master_raster.tif")
#save(list_rasters, file = "~/BurkeLab Dropbox/Projects/loss_damage/sherlock_files/data/pre_processed/list_rasters.RData")
#saveRDS(list_rasters, "~/Burkelab Dropbox/Projects/loss_damage/data/processed/r_cgm/ratio_raster_list.rds")
# ok let us read the processed raster and list of rasters for warming ratio
mean_r_raster <- raster("~/Burkelab Dropbox/Projects/loss_damage/data/processed/r_cgm/ratio_raster_avgs.tif")
list_r_rasters <- readRDS("~/Burkelab Dropbox/Projects/loss_damage/data/processed/r_cgm/ratio_raster_list.rds")
################################################################################
##################### PART II: Read and compute delta T ########################
################################################################################
# we have a set of experiments that we have ran through FaIR to recover deltat
# from each emissions preturbation. Below we go through the different experiments.
# The temperature response data were obtained by running FaIR through jupyter notebook.
####################### Experiment (1G/tCO2/yr): ########################
# this experiment is run to estimate the temperature effects of pulsing
# 1GtCO2 or 1tCO2 at a given year.
## 1tCO2
# temperature response through 2100
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("052323_1tCO2_hist_2100", 1990, aggregating = T)
# temperature response through 2300
fair_exps_1tco2_2300 <- process_exp_data_hist_fut("052323_1tCO2_hist_2300", 1990, aggregating = T)
# temperature response through 2100
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2a_FaIR_deltaT_hist.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2c_FaIR_deltaT_hist_fut_disagg.R")
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2a_FaIR_deltaT_hist.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2c_FaIR_deltaT_hist_fut_disagg.R")
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
##############################################################################
# Mustafa Zahid, June 16th, 2022
# This R script reads the FAIR temperature response time series data and
# and outputs a mdeian or range of estimates for temperature response to
# emissions according to FaIR.
# Input(s): raw FaIR temperature response data from desired experiments
# Output(s): processed median FaIR termperature response to be used with the
# calculated CGM warming ratio in the previous step
# Outputs using this script: This script is used to produce the fair responses
# used to calculate imapcts of 1gtco2/1tco2 on temperature. It is also used
# for carbon capture, SPP GDP impacts, and green gdp plot.
# Last updated: June 2023
##############################################################################
# we need to calculate the difference in temperature response between an
# experiment where we run with full emissions, and where we shut off emissions
# from a country
# the following function processes the temperature response from the FaIR models
# the output from this. The arguments it takes is year k
process_exp_data_hist_fut <- function(date, experiment, year_k, aggregating){
# set path and get list of files from directory
path <- paste0("~/BurkeLab Dropbox/Projects/loss_damage/FaIR/", date)
#fair_exp <- experiment
# now let us generate the year k identifier to call the files
year_k_exp <- paste0("k", substr(year_k, 3,4))
# generate list of files
all_data = list.files(path=path,
pattern = paste0("fair_temp_resp_", year_k_exp, "_", experiment),
full.names = TRUE,
recursive = TRUE,
include.dirs = FALSE)
# now read files into one list
tic()
listofdfs <- mclapply(all_data, read_csv, mc.cores = 7)
toc()
# ... and append all dataframes
fair_exps <- do.call(rbind, listofdfs)
# Let us clean the dataframe so that we can use it to aggregate
fair_exps$num_loop <- as.numeric(gsub("([0-9]+).*$", "\\1", fair_exps$loop))
fair_exps <- fair_exps[-c(1:2),]
fair_exps$year <- as.numeric(fair_exps$Scenario) + year_k
fair_exps <- fair_exps %>%
dplyr::mutate(loop = case_when(num_loop <= 9 ~ paste0("00", loop),
(num_loop >9 & num_loop < 100) ~ paste0("0", loop),
TRUE ~ loop))
if (experiment == "hist_fut_yriso" | experiment == "hist_fut_060123_yriso") {
fair_exps$exp_yr <- substr(fair_exps$loop, 17,20)
fair_exps$experiment_iso <- substr(fair_exps$loop, 10,12)
}
#  head(fair_exps)
if (experiment == "1GtC_hist_fut_ssp370fnl1" | experiment == "1GtC_hist_fut_sspxxx1" |
experiment =="1GtC_hist_fut_test1" | experiment =="1tC_hist_fut_test" |
experiment =="1GtCO2_hist_fut_main" | experiment =="1tCO2_hist_fut_main" |
experiment == "1tCO2_hist_2300" | experiment == "1GtCO2_hist_2300" |
experiment == "new_cc_hist" | experiment == "041023_1tCO2_hist_2300" |
experiment == "041023_new_cc_hist" | experiment == "052323_1GtCO2_hist_2100" |
experiment == "1tCO2_hist_2100"| experiment == "052323_1tCO2_hist_2300"|
experiment == "060523_new_cc_hist") {
fair_exps$experiment_iso <- substr(fair_exps$loop, 5,8)
}
if (experiment == "1GtC_hist_fut_ssp245" | experiment == "1GtC_hist_fut_ssp119" ) {
fair_exps$experiment_iso <- substr(fair_exps$loop, 5,8)
}
if (experiment == "hist_fut" | experiment == "hist_fut_ssp119" |
experiment == "hist_fut_ssp370" |
experiment == "hist_fut_ssp126" | experiment == "hist_fut_ssp245" |
experiment == "hist_fut_noemms_ssp126" | experiment == "hist_fut_noemms_ssp245" |
experiment == "hist_fut_noemms_ssp119" | experiment == "futssp" |
experiment == "hist_fut_bilateral" | experiment == "hist_bi_v2022" |
experiment == "hist_bitt_v2022" | experiment == "hist_biconsump_v2022" |
experiment == "hist_biprod_v2022" | experiment == "hist_biusa_v2022"
) {
fair_exps$experiment_iso <- substr(fair_exps$loop, 10,12)
}
if (experiment == "carbon_debt" | experiment == "carbon_debt_op" |
experiment == "carbon_debt_indent" | experiment == "carbon_debt_indentcelebs") {
fair_exps$experiment_iso <- substring(fair_exps$loop, 10)
}
if (experiment == "ssp370" | experiment == "ssp245" | experiment == "ssp119" | experiment == "ssp126"){
fair_exps$experiment_iso <- substr(fair_exps$loop, 10,13)
}
# cast response as numeric
fair_exps$Test <- as.numeric(fair_exps$Test)
#select the needde variables
if (experiment == "hist_fut_yriso" | experiment == "hist_fut_060123_yriso"){
fair_exps <- fair_exps %>% dplyr::select(c("num_loop",
"experiment_iso",
"exp_yr",
"year", "Test"))}
if (experiment != "hist_fut_yriso" & experiment != "hist_fut_060123_yriso"){
fair_exps <- fair_exps %>% dplyr::select(c("num_loop",
"experiment_iso",
"year", "Test"))}
#  fair_exps <- fair_exps %>% dplyr::select(c("num_loop",
#                                            "experiment_iso",
#                                           "year", "Test"))
if (experiment == "1GtC_hist_fut_ssp370fnl1"| experiment == "1GtC_hist_fut_sspxxx1" |
experiment =="1GtC_hist_fut_test1" | experiment =="1tC_hist_fut_test" |
experiment =="1GtCO2_hist_fut_main" | experiment =="1tCO2_hist_fut_main" |
experiment == "1tCO2_hist_2300" | experiment == "1GtCO2_hist_2300" |
experiment == "new_cc_hist"| experiment == "041023_1tCO2_hist_2300"|
experiment == "041023_new_cc_hist"| experiment == "052323_1GtCO2_hist_2100"|
experiment == "1tCO2_hist_2100"| experiment == "052323_1tCO2_hist_2300"|
experiment == "060523_new_cc_hist") {
fair_exp_all <- subset(fair_exps, experiment_iso == "loop")
}
if (experiment == "1GtC_hist_fut_ssp245" | experiment == "1GtC_hist_fut_ssp119" ) {
fair_exp_all <- subset(fair_exps, experiment_iso == "loop")
}
if (experiment == "hist_fut" | experiment == "hist_fut_ssp119" |
experiment == "hist_fut_ssp370" |
experiment == "hist_fut_ssp126" | experiment == "hist_fut_ssp245" |
experiment == "hist_fut_noemms_ssp126" | experiment == "hist_fut_noemms_ssp245" |
experiment == "hist_fut_noemms_ssp119" | experiment == "futssp" |
experiment == "hist_fut_bilateral" | experiment == "hist_bi_v2022" |
experiment == "hist_bitt_v2022" | experiment == "hist_biconsump_v2022" |
experiment == "hist_biprod_v2022" | experiment == "hist_biusa_v2022"
)
{
fair_exp_all <- subset(fair_exps, experiment_iso == "all")
}
if (experiment == "carbon_debt" | experiment == "carbon_debt_op" |
experiment == "carbon_debt_indent" | experiment == "carbon_debt_indentcelebs") {
fair_exp_all <- subset(fair_exps, experiment_iso == "all")
}
if (experiment == "ssp370" | experiment == "ssp245" | experiment == "ssp119" | experiment == "ssp126"){
fair_exp_all <- subset(fair_exps, experiment_iso == "all1")
}
fair_exp_all <- fair_exp_all %>% dplyr::select(c("num_loop", "experiment_iso",
"year", "Test"))
colnames(fair_exp_all)[2] <- "all"
# now let us join the data from all the experiments and the data from running
# the FaIR with all emissions
fair_exps <- left_join(fair_exps,
fair_exp_all,
by = c("num_loop", "year"))
if (experiment == "1GtC_hist_fut_ssp370fnl1"| experiment == "1GtC_hist_fut_sspxxx1" |
experiment =="1GtC_hist_fut_test1" | experiment =="1tC_hist_fut_test" |
experiment =="1GtCO2_hist_fut_main" | experiment =="1tCO2_hist_fut_main" |
experiment == "1tCO2_hist_2300" | experiment == "1GtCO2_hist_2300" |
experiment == "new_cc_hist"| experiment == "041023_1tCO2_hist_2300"|
experiment == "041023_new_cc_hist"| experiment == "052323_1GtCO2_hist_2100"|
experiment == "1tCO2_hist_2100"| experiment == "052323_1tCO2_hist_2300"|
experiment == "060523_new_cc_hist"){
# we subtract FaIR ran with all emissions from the left hand side
fair_exps <- subset(fair_exps, experiment_iso != "loop")
}
if (experiment == "1GtC_hist_fut_ssp245" | experiment == "1GtC_hist_fut_ssp119" ) {
fair_exps <- subset(fair_exps, experiment_iso != "loop")
}
if (experiment == "hist_fut" | experiment == "hist_fut_ssp119" |
experiment == "hist_fut_ssp370" |
experiment == "hist_fut_ssp126" | experiment == "hist_fut_ssp245" |
experiment == "hist_fut_noemms_ssp126" | experiment == "hist_fut_noemms_ssp245" |
experiment == "hist_fut_noemms_ssp119" | experiment == "futssp" |
experiment == "hist_fut_bilateral" | experiment == "hist_bi_v2022" |
experiment == "hist_bitt_v2022" | experiment == "hist_biconsump_v2022" |
experiment == "hist_biprod_v2022" | experiment == "hist_biusa_v2022"
) {
fair_exps <- subset(fair_exps, experiment_iso != "all")
}
if (experiment == "carbon_debt" | experiment == "carbon_debt_op" |
experiment == "carbon_debt_indent" | experiment == "carbon_debt_indentcelebs") {
# we subtract FaIR ran with all emissions from the left hand side
fair_exps <- subset(fair_exps, experiment_iso != "all")
}
if (experiment == "ssp370" | experiment == "ssp245" | experiment == "ssp119" | experiment == "ssp126"){
fair_exps <- subset(fair_exps, experiment_iso != "all1")
}
# now we can calculate difference (deltaT)
fair_exps$deltaT <- fair_exps$Test.y - fair_exps$Test.x
#fair_exps$deltaT <- fair_exps$Test.x
fair_exps_2020 <- subset(fair_exps, experiment_iso == "2020")
#  plot(fair_exps_2020$year[fair_exps_2020$num_loop == "27"],
#         fair_exps_2020$deltaT[fair_exps_2020$num_loop == "27"], type = "l",
#       ylab = "fair deltat (current table)", xlab = 'year')
#
#  for (i in unique(fair_exps_2020$num_loop)){
#    lines(fair_exps_2020$year[fair_exps_2020$num_loop == i],
#         fair_exps_2020$deltaT[fair_exps_2020$num_loop == i])
#  }
if ( aggregating == T){
# now we need to aggregate this to the country-year level and calculate the
# median
if (experiment == "hist_fut_yriso" | experiment == "hist_fut_060123_yriso"){
fair_exps <- fair_exps %>%
dplyr::group_by(year, experiment_iso, exp_yr) %>%
dplyr::summarise(median_deltat = median(deltaT, na.rm = T),
median_deltat_fullemms = median(Test.y, na.rm = T),
median_deltat_preturb = median(Test.x, na.rm = T),
.groups = "keep")
}
if (experiment != "hist_fut_yriso" & experiment != "hist_fut_060123_yriso"){
fair_exps <- fair_exps %>%
dplyr::group_by(year, experiment_iso) %>%
dplyr::summarise(median_deltat_preturb = median(Test.x, na.rm = T),
median_deltat_fullemms = median(Test.y, na.rm = T),
median_deltat = median(deltaT, na.rm = T),
.groups = "keep")
}
}
#plot(fair_exps$year, fair_exps$median_deltat_preturb)
if (experiment == "1GtC_hist_fut_ssp370fnl1"| experiment == "1GtC_hist_fut_sspxxx1" |
experiment =="1GtC_hist_fut_test1" | experiment =="1tC_hist_fut_test" |
experiment =="1GtCO2_hist_fut_main" | experiment =="1tCO2_hist_fut_main" |
experiment == "1tCO2_hist_2300" | experiment == "1GtCO2_hist_2300" |
experiment == "new_cc_hist"| experiment == "041023_1tCO2_hist_2300" |
experiment == "041023_new_cc_hist"| experiment == "052323_1GtCO2_hist_2100"|
experiment == "1tCO2_hist_2100"| experiment == "052323_1tCO2_hist_2300"|
experiment == "060523_new_cc_hist"){
for (i in year_k:2100){
fair_exps1 <- subset(fair_exps, experiment_iso == i)
fair_exps1$deltat_fullemms <- fair_exps1$median_deltat_fullemms - fair_exps1$median_deltat_fullemms[fair_exps1$year == 2020]
fair_exps$deltat_fullemms[fair_exps$experiment_iso == i] <- fair_exps1$deltat_fullemms
fair_exps1$deltaT_preturb <- fair_exps1$median_deltat_preturb - fair_exps1$median_deltat_preturb[fair_exps1$year == 2020]
fair_exps$deltaT_preturb[fair_exps$experiment_iso == i] <- fair_exps1$deltaT_preturb
}
}
#unique(fair_exps$exp_yr)
i <- 2019
j <- "CHN"
if (experiment == "hist_fut_yriso" | experiment == "hist_fut_060123_yriso"){
for (i in year_k:2020){
for (j in unique(fair_exps$experiment_iso)){
fair_exps1 <- subset(fair_exps, experiment_iso == j & exp_yr == i)
fair_exps1$deltat_fullemms <- fair_exps1$median_deltat_fullemms - fair_exps1$median_deltat_fullemms[fair_exps1$year == 2020 & fair_exps1$experiment_iso == j]
fair_exps$deltat_fullemms[fair_exps$experiment_iso == j & fair_exps$exp_yr == i] <- fair_exps1$deltat_fullemms
fair_exps1$deltaT_preturb <- fair_exps1$median_deltat_preturb - fair_exps1$median_deltat_preturb[fair_exps1$year == 2020 & fair_exps1$experiment_iso == j]
fair_exps$deltaT_preturb[fair_exps$experiment_iso == j & fair_exps$exp_yr == i] <- fair_exps1$deltaT_preturb
}
}
}
#plot(fair_exps1$year, fair_exps1$median_deltat, type = "l")
if (experiment == "ssp370" | experiment == "ssp245" | experiment == "ssp119" |
experiment == "ssp126" | experiment == "hist_fut_bilateral" | experiment == "hist_bi_v2022" |
experiment == "hist_bitt_v2022"){
fair_exps$deltaT_fullemms <- 0
fair_exps$deltaT_preturb <- 0
fair_exps$deltaT_fullemms <- fair_exps$median_deltat_fullemms - fair_exps$median_deltat_fullemms[fair_exps$year == 2020]
fair_exps$deltaT_preturb <- fair_exps$median_deltat_preturb - fair_exps$median_deltat_preturb[fair_exps$year == 2020]
}
plot(fair_exps$year[fair_exps$year <= 2100], fair_exps$median_deltat[fair_exps$year <= 2100])
# clear out this standout country that produces negative values (St. Kitts & Nevis)
fair_exps <- subset(fair_exps, experiment_iso != "KNA")
# return the dataset with median deltaT from FaIR
return(fair_exps)
}
# end of script
source("~/BurkeLab Dropbox/Projects/loss_damage/scripts/working/analysis/2b_FaIR_deltaT_hist_fut.R")
fair_exps_1tco2_2100 <- process_exp_data_hist_fut("20230523", "1tCO2_hist_2100", 1990, aggregating = T)
